$_module: "PDS.Theme.Light";
// config may not be the final "base" of a theme,
// but it'll likely be a big part of it
@use "sass:map";
@use "../tokens/color";
@use "../tokens/font";
@use "../tokens/resolutions";
@use "../tokens/scale";

// TODO: update with generic set of baseline
// variables in order to easily apply a theme.
// (see p39-42 in October 2019 Brand Guide)

// Ideally, configuration can be done via CSS custom properties
// in order to enable simpler client-side a11y configuration.
// This requires some auditing and research to identify which
// settings should be client-side configurable.
//
// For now, we define everything in Sass.
// Sass variables define the theme module "exports"
// for `@use "pds/theme";` within consuming apps as `theme.*` vars.
//
// This should allow for the replacement, or injection of
// new/custom themes into the module @use chain.

// TODO: need var for 14px typography styles (Code, Label, Interface/M)

///----------------------------------------///
/// CORE DEFAULTS
///----------------------------------------///
$rem: 16px;
$backgroundColor: color.$white;
$color: color.$black;


///----------------------------------------///
/// CORE SCALE
///----------------------------------------///
// Useful for:
//   - Dimensions (height, width, offset, etc.)
//   - Spacing (margin, padding, etc.)
//   - Font Size (headings, body copy, subtext, supertext, etc.)
$size--2xs: scale.$sm-3; // 4px  (0.25rem)
$size--xs:  scale.$sm-2; // 8px  (0.5rem)
$size--sm:  scale.$sm-1; // 12px (0.75rem)
$size--md:  scale.$base; // 16px (1rem)
$size--lg:  scale.$lg-2; // 24px (1.5rem)
$size--xl:  scale.$lg-5; // 36px (2.25rem)
$size--2xl: scale.$lg-7; // 48px (3rem)


///----------------------------------------///
/// CORE MEDIA/RESPONSIVE BREAKPOINTS
///----------------------------------------///
// Sass Only! (DO NOT allow client configuration)
//
// Even if we did allow client a11y configuration,
// CSS custom properties can't be used in @media
// queries.  Media Queries Level 5 spec will enable
// this, but it's not yet available in any browser.

// Tablets & Low-res PCs
$media--sm: resolutions.$svga-width !default;
// High-res PCs
$media--md: resolutions.$hd-width !default;
// Ultra High-res PCs
$media--lg: resolutions.$fhd-width !default;


///----------------------------------------///
/// CORE TYPOGRAPHY
///----------------------------------------///
:root {
  // Per WCAG2.0 ยง 1.4.12 ("Text Spacing -- Level AA"),
  // these properties must be configurable in order
  // to meet requirements for Level AA compliance.
  //
  // For more info, see https://www.w3.org/WAI/WCAG21/quickref/#text-spacing
  --pds-letterSpacing: 0.12em; // letter-spacing
  --pds-lineHeight: 1.5;       // line-height (normal)
  --pds-lineHeight--dense: 1.2; // line-height (dense)
  --pds-paragraphSpacing: 2em; // margin-bottom (block-end margin)
  --pds-wordSpacing: 0.16em;   // word-spacing
}
$fontFamily: font.$family-system-sans;
$fontFamily--code: font.$family-system-mono;
$fontSize: $size--md; // ~16px/1rem
$fontSize--ui: 0.875rem; // ~14px (not a scale value)
$letterSpacing: var(--pds-letterSpacing);
$lineHeight: var(--pds-lineHeight);
$lineHeight--dense: var(--pds-lineHeight--dense);
$paragraphSpacing: var(--pds-paragraphSpacing);
$wordSpacing: var(--pds-wordSpacing);


///----------------------------------------///
/// CORE BORDERS
///----------------------------------------///
:root {
  --pds-borderRadius: #{scale.$sm--4}; // ~2px
}
$borderColor: color.$ui-gray-300;
$borderColor--l1: color.$ui-gray-200;
$borderRadius: var(--pds-borderRadius);

/// TODO: deprecate/rename below vars to fit EMP naming format

///----------------------------------------///
/// CORE ACTION
///----------------------------------------///
$action-l2:   color.$blue-010; // Lightest (+2)
$action-l1:   color.$blue-100; // Light (+1)
$action-base: color.$blue-500; // Base (0)
$action-d1:   color.$blue-700; // Dark (-1)


///----------------------------------------///
/// CORE STATUS (INFO)
///----------------------------------------///
$info-l2:   color.$blue-010; // Lightest (+2)
$info-l1:   color.$blue-100; // Light (+1)
$info-base: color.$blue-500; // Base (0)
$info-d1:   color.$blue-700; // Dark (-1)


///----------------------------------------///
/// CORE STATUS (ALERT)
///----------------------------------------///
$alert-l2:   color.$orange-010; // Lightest (+2)
$alert-l1:   color.$orange-100; // Light (+1)
$alert-base: color.$orange-500; // Base (0)
$alert-d1:   color.$orange-800; // Dark (-1)


///----------------------------------------///
/// CORE STATUS (SUCCESS)
///----------------------------------------///
$success-l2:   color.$green-010; // Lightest (+2)
$success-l1:   color.$green-100; // Light (+1)
$success-base: color.$green-500; // Base (0)
$success-d1:   color.$green-800; // Dark (-1)


///----------------------------------------///
/// CORE STATUS (WARNING)
///----------------------------------------///
$warning-l2:   color.$yellow-010; // Lightest (+2)
$warning-l1:   color.$yellow-100; // Light (+1)
$warning-base: color.$yellow-500; // Base (0)
$warning-d1:   color.$yellow-800; // Dark (-1)


///----------------------------------------///
/// CORE STATUS (FAILURE)
///----------------------------------------///
// TODO: rename to "error" instead of "failure"
$failure-l2:   color.$red-010; // Lightest (+2)
$failure-l1:   color.$red-100; // Light (+1)
$failure-base: color.$red-500; // Base (0)
$failure-d1:   color.$red-800; // Dark (-1)


///----------------------------------------///
/// SHADOWS
///----------------------------------------///
// Focus
$boxShadow--focus: 0 0 0 3px #{rgba(color.$blue-500, 0.5)};
// Elevation
$_black--a05: rgba(0, 0, 0, 0.05);
$_black--a06: rgba(0, 0, 0, 0.06);
$_black--a08: rgba(0, 0, 0, 0.08);
$_black--a10: rgba(0, 0, 0, 0.10);
$_black--a20: rgba(0, 0, 0, 0.20);
$_black--a25: rgba(0, 0, 0, 0.25);
$boxShadow--well: inset 0 3px 1px $_black--a06;
$boxShadow--low:     0 4px 4px $_black--a25;
$boxShadow--middle:  0 4px 8px $_black--a05, 0 4px  4px $_black--a10;
$boxShadow--high:    0 5px 5px $_black--a08, 0 8px  10px $_black--a10;
$boxShadow--highest: 0 6px 6px $_black--a06, 0 12px 16px $_black--a20;

$SHADOWS: (
  well: $boxShadow--well,
  low: $boxShadow--low,
  middle: $boxShadow--middle,
  high: $boxShadow--high,
  highest: $boxShadow--highest,
);

@function getShadow($elevation: none, $focus: false) {
  /* [debug] #{$_module}#getShadow(#{$elevation}, $focused: #{$focused}) */
  $base: ();
  @if $elevation != none {
    $base: map.get($SHADOWS, $elevation);
  }

  $result: ($base);
  @if $focus {
    $result: ($base, $boxShadow--focus);
  }

  @return $result;
}


///----------------------------------------///
/// Controls/Inputs (inline)
///----------------------------------------///
:root {
  --pds-control-height: #{scale.$lg--4}; // ~32px
  --pds-control-fontSize: #{$fontSize--ui};
}
$control-height: var(--pds-control-height);
$control-fontSize: var(--pds-control-fontSize);


// deprecated vars (prevent breaking existing consumption)
@import "light-deprecated";
