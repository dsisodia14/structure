$_module: "PDS.Components.Button";
/* --- [debug] CONFIG: #{$_module} --- */
@use "../config" as Component;
@use "../../theme";
@use "../../tokens/color";
@use "../../tokens/font";
@use "../../tokens/scale";
@use "../../core/typography/config" as Typography;
@use "../../utils/pseudo" as Pseudo;

@mixin theme($styles) {
  /* [debug] #{$_module}@theme */
  @include Component.theme(button, $styles);
}

// defaults (void of color)
$DEFAULT: (
  backgroundColor: transparent,
  borderColor: transparent,
  borderRadius: theme.$borderRadius,
  boxShadow: none,
  color: inherit,
);

// Dynamic Layout
$colGap: var(--pds-button-colGap);
$height: var(--pds-button-height);
$paddingInlineEnd: var(--pds-button-paddingInlineEnd);
$paddingInlineStart: var(--pds-button-paddingInlineStart);
// Dynamic Appearance
$backgroundColor: var(--pds-button-backgroundColor);
$borderColor: var(--pds-button-borderColor);
$borderRadius: var(--pds-button-borderRadius);
$boxShadow: var(--pds-button-boxShadow);
$color: var(--pds-button-color);
// Static Variables
$fontFamily: font.$family--sans;
$paddingInline--compact: scale.$sm--1; // 0.75rem (12px)
$paddingInline--iconOnly: 0.625rem; // (~10px) FIXME: not part of the scale!
$paddingInline--iconOnly--compact: scale.$sm--2; // 0.5rem (8px)
$paddingInline--nearIcon: scale.$lg--1; // 1rem (16px)


$LAYOUT_DEFAULT: (
  colGap: scale.$sm--3,
  height: scale.$lg--5, // 2.25rem (36px)
  paddingInlineEnd: scale.$lg--2,
  paddingInlineStart: scale.$lg--2,
);
$LAYOUT_ICON_START: (
  paddingInlineStart: $paddingInline--nearIcon,
);
$LAYOUT_ICON_END: (
  paddingInlineEnd: $paddingInline--nearIcon,
);
$LAYOUT_COMPACT: (
  height: scale.$lg--2, // 1.5rem (24px)
  paddingInlineEnd: $paddingInline--compact,
  paddingInlineStart: $paddingInline--compact,
);
$LAYOUT_ICON_ONLY: (
  colGap: 0, // remove white space between icons
  paddingInlineEnd: $paddingInline--iconOnly,
  paddingInlineStart: $paddingInline--iconOnly,
);
$LAYOUT_ICON_ONLY_COMPACT: (
  paddingInlineEnd: $paddingInline--iconOnly--compact,
  paddingInlineStart: $paddingInline--iconOnly--compact,
);

@mixin layout--reset {
  display: inline-block;
  margin: 0;
  padding: 0;
}

@mixin layout--base {
  align-items: center;
  display: inline-flex;
  height: $height;
  justify-content: center;
  margin: 0;
  padding: 0 $paddingInlineEnd 0 $paddingInlineStart;
  white-space: nowrap;

  > * {
    margin: 0;
  }

  > * + * {
    margin-inline-start: $colGap;
  }
}

// default (unwrapped) layout
@mixin layout {
  /* [debug] #{$_module}@layout */
  @include layout--reset;
  @include layout--base;

  @include theme($LAYOUT_DEFAULT);

  &.pds--iconStart {
    @include theme($LAYOUT_ICON_START);
  }

  &.pds--iconEnd {
    @include theme($LAYOUT_ICON_END);
  }

  // 12px inline padding (regardless of icon presence)
  // should override iconStart/iconEnd padding
  &.pds--compact {
    @include theme($LAYOUT_COMPACT);
  }

  &.pds--iconOnly {
    @include theme($LAYOUT_ICON_ONLY);

    &.pds--compact {
      @include theme($LAYOUT_ICON_ONLY_COMPACT);
    }
  }
}

// Define common styles and theming hooks
@mixin appearance {
  /* [debug] #{$_module}@appearance */
  @include Typography.Interface(M);
  background-color: $backgroundColor;
  border-radius: $borderRadius;
  border: 1px solid $borderColor;
  box-shadow: $boxShadow;
  color: $color;
  cursor: pointer;
  font-family: $fontFamily;
  line-height: 1;

  @include theme($DEFAULT);

  @include Pseudo.focus {
    outline: none;
  }

  &:disabled {
    cursor: default;
  }
}

@mixin apply {
  /* [debug] #{$_module}@apply */
  .pds-button {
    @content;
  }
}
