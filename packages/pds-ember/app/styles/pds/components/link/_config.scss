$_module: "PDS.Components.Link";
@use "sass:map";
/* --- [debug] CONFIG: #{$_module} --- */
@use "../config" as Component;
@use "../../theme";
@use "../../tokens/typography" as Typography;
@use "../../utils/pseudo" as Pseudo;

@mixin theme($styles) {
  /* [debug] #{$_module}@theme */
  @include Component.theme(link, $styles);
}

@mixin reset {
  @include Typography.reset;
}

// :any-link
$DEFAULT: (
  boxShadow: none,
  color: theme.$action-base,
  borderBottomColor: transparent,
);
// :any-link:hover
$HOVER: (
  borderBottomColor: currentcolor,
);
// :any-link:focus
$FOCUS: map.merge($HOVER, (
  boxShadow: theme.$boxShadow--focus,
));
// :any-link:active
$ACTIVE: map.merge($HOVER, (
  boxShadow: none,
  color: theme.$action-d1,
));

:root {
  @include theme($DEFAULT);
}

// Themable Properties
$boxShadow: var(--pds-link-boxShadow);
$color: var(--pds-link-color);
$borderBottomColor: var(--pds-link-borderBottomColor);


@mixin appearance {
  /* [debug] #{$_module}@appearance */
  box-shadow: $boxShadow;
  color: $color;
  cursor: pointer;
  text-decoration: none;
  border-bottom: 1px solid $borderBottomColor;

  @include Pseudo.hover {
    @include theme($HOVER);
  }

  @include Pseudo.focus {
    @include theme($FOCUS);
    outline: none;
  }

  @include Pseudo.active {
    @include theme($ACTIVE);
  }
}

@mixin apply {
  /* [debug] #{$_module}@apply */
  :any-link {
    @content;
  }
}
